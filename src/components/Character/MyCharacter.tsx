/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 public/models/myCharacter.glb -o src/components/Character/Character.tsx -r public 
*/

import React, { useEffect, useRef, useState } from 'react';
import { useAnimations, useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { AnimationAction } from 'three';

import { motion } from 'framer-motion-3d';

type MyCharacterProps = JSX.IntrinsicElements['group'] & {
  section: number;
};

export function MyCharacter(props: MyCharacterProps) {
  const character = useRef();

  const { scene, animations }: GLTF = useGLTF('/models/newCharacter.glb');

  const { actions } = useAnimations(animations, character);

  useEffect(() => {
    const wavingAnimation: AnimationAction = actions[
      'Waving'
    ] as AnimationAction;
    wavingAnimation.reset().fadeIn(0.32)?.play();

    return () => {
      actions['Waving']?.fadeOut(0.32);
    };
  }, [actions, animations]);

  return (
    <motion.group>
      <group {...props} dispose={null}>
        <primitive object={scene} ref={character} />
      </group>
    </motion.group>
  );
}

useGLTF.preload('/models/myCharacter.glb');
